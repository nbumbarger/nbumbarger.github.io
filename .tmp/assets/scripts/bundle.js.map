{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/assets/scripts/actions/index.js","app/assets/scripts/components/header/header-nav-button.js","app/assets/scripts/components/header/header-nav-hint.js","app/assets/scripts/components/header/header-nav.js","app/assets/scripts/components/header/header.js","app/assets/scripts/components/home-background.js","app/assets/scripts/config.js","app/assets/scripts/config/local.js","app/assets/scripts/config/production.js","app/assets/scripts/config/staging.js","app/assets/scripts/constants.js","app/assets/scripts/main.js","app/assets/scripts/reducers/home.js","app/assets/scripts/reducers/index.js","app/assets/scripts/utils/map.js","app/assets/scripts/views/home.js","app/assets/scripts/views/uhoh.js","node_modules/process/browser.js"],"names":[],"mappings":"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ACbffile":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict'\n","'use strict'\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nconst HeaderNavButton = (props) => {\n  return (\n    <li className='header-nav-button'>\n      <a href={props.item.url} target='_blank'>\n        <div className={classnames('nav-button-icon', props.item.iconClass)}></div>\n        <div className='nav-button-text'>{props.item.name}</div>\n      </a>\n    </li>\n  )\n}\n\nHeaderNavButton.propTypes = {\n  item: PropTypes.object\n}\n\nexport default HeaderNavButton\n","'use strict'\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nconst HeaderNavHint = (props) => {\n  return (\n    props.navActive\n      ? (<ul className={classnames('header-nav-hint nav-cancel', {hidden: !props.navActive})}>\n          <li className='collecticon-circle-xmark' />\n         </ul>)\n      : (<ul className={classnames('header-nav-hint nav-activate', {hidden: !props.navHintActive && !props.mobileWidth})}>\n          <li className='collecticon-chevron-up' />\n          <li className='collecticon-chevron-up' />\n          <li className='collecticon-chevron-up' />\n          <li className='collecticon-chevron-up' />\n          <li className='collecticon-chevron-up' />\n          <li className='collecticon-chevron-up' />\n        </ul>)\n  )\n}\n\nHeaderNavHint.propTypes = {\n  navHintActive: PropTypes.bool,\n  navActive: PropTypes.bool,\n  mobileWidth: PropTypes.bool\n}\n\nexport default HeaderNavHint\n","'use strict'\n\nimport React from 'react'\nimport { Motion, spring } from 'react-motion'\nimport PropTypes from 'prop-types'\n\nimport HeaderNavButton from './header-nav-button'\nimport { navLinks } from '../../constants'\n\nconst HeaderNav = (props) => {\n  return (\n    <Motion className='header-nav-container' defaultStyle={{x: -10, o: 0}} style={{\n      x: spring(props.navActive ? 1.5 : -75, {stiffness: 60, damping: 15}),\n      o: spring(props.navActive ? 1 : 0, {stiffness: 60, damping: 20})\n    }}>\n    {interpolation => {\n      return (\n        <nav className='header-nav' style={{left: `${interpolation.x}rem`, opacity: interpolation.o}}>\n          <ul>\n            {navLinks.map((item) => <HeaderNavButton key={`nav-button-${item.name}`} item={item} />)}\n          </ul>\n        </nav>\n      )\n    }\n  }\n  </Motion>)\n}\n\nHeaderNav.propTypes = {\n  navActive: PropTypes.bool\n}\n\nexport default HeaderNav\n","'use strict'\n\nimport React, { Component } from 'react'\nimport { Motion, spring } from 'react-motion'\n\nimport HeaderNavHint from './header-nav-hint'\nimport HeaderNav from './header-nav'\n\nclass Header extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      mobileWidth: false,\n      navHintActive: true,\n      navActive: false\n    }\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\n    this.handleHeaderMouseOver = this.handleHeaderMouseOver.bind(this)\n    this.handleHeaderMouseOut = this.handleHeaderMouseOut.bind(this)\n    this.handleHeaderClick = this.handleHeaderClick.bind(this)\n  }\n\n  componentDidMount () {\n    this.updateWindowDimensions()\n    window.addEventListener('resize', this.updateWindowDimensions)\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('resize', this.updateWindowDimensions)\n  }\n\n  updateWindowDimensions () {\n    this.setState({\n      mobileWidth: window.innerWidth <= 543\n    })\n  }\n\n  handleHeaderMouseOver () {\n    this.setState({navHintActive: true})\n  }\n\n  handleHeaderMouseOut () {\n    this.setState({navHintActive: false})\n  }\n\n  handleHeaderClick () {\n    this.setState({navActive: !this.state.navActive})\n  }\n\n  render () {\n    const navOffsetY = this.state.mobileWidth ? 5 : 4\n    return (\n      <div className='header-container'>\n      <Motion defaultStyle={{y: 2}} style={{y: spring(this.state.navActive ? navOffsetY : 2, {stiffness: 100, damping: 20})}}>\n      {interpolation => {\n        return (\n          <header\n            className='header'\n            style={{bottom: `${interpolation.y}rem`}}\n            onMouseOver={this.handleHeaderMouseOver}\n            onMouseOut={this.handleHeaderMouseOut}\n            onClick={this.handleHeaderClick}\n          >\n            <div className='header-text'>\n            <Motion defaultStyle={{x1: -25, o1: 0, x2: -50, o2: 0}} style={{\n              x1: spring(0, {stiffness: 150, damping: 25}),\n              o1: spring(1, {stiffness: 30, damping: 15}),\n              x2: spring(0, {stiffness: 120, damping: 20}),\n              o2: spring(1, {stiffness: 20, damping: 20})\n            }}>\n            {interpolation => {\n              return (\n                <div>\n                  <div style={{\n                    marginLeft: `${interpolation.x1}rem`,\n                    opacity: interpolation.o1}}>\n                    <h1>Nick </h1>\n                    <h1>B</h1>\n                  </div>\n                  <div className='description' style={{\n                    marginLeft: `${interpolation.x2}rem`,\n                    opacity: interpolation.o2}}>\n                      <h2>\n                        <span className='description-part1'>Web and Geospatial </span>\n                        <span className='description-part2'>Developer</span>\n                      </h2>\n                  </div>\n                </div>\n              )\n            }}\n            </Motion>\n            </div>\n          <HeaderNavHint\n            navHintActive={this.state.navHintActive}\n            navActive={this.state.navActive}\n            mobileWidth={this.state.mobileWidth} />\n        </header>\n        )\n      }}\n      </Motion>\n      <HeaderNav\n        navActive={this.state.navActive} />\n    </div>)\n  }\n}\n\nexport default Header\n","'use strict'\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport config from '../config'\nimport { mapSettings, mapPOIs, staticSettings } from '../constants'\nimport { getBearing } from '../utils/map'\n\nclass HomeBackground extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      poiIndex: Math.floor(Math.random() * mapPOIs.length)\n    }\n  }\n\n  initializeMap () {\n    this.props.mapboxgl.accessToken = config.accessToken\n    const map = new this.props.mapboxgl.Map({\n      container: mapSettings.container,\n      style: mapSettings.style,\n      center: mapPOIs[this.state.poiIndex].coords,\n      zoom: mapSettings.zoom,\n      pitch: mapSettings.pitch\n    })\n    map.on('load', () => {\n      this.mapZoomTo(map)\n    })\n    map.on('moveend', () => {\n      this.mapZoomTo(map)\n    })\n  }\n\n  mapZoomTo (map) {\n    // Set bearing to slowly rotate transition view towards next point\n    const newIndex = Math.floor(Math.random() * mapPOIs.length)\n    const startCoord = mapPOIs[this.state.poiIndex].coords\n    const endCoord = mapPOIs[newIndex].coords\n    const bearing = getBearing(startCoord, endCoord)\n\n    map.flyTo({\n      center: endCoord,\n      zoom: mapSettings.zoom,\n      bearing: bearing,\n      pitch: mapSettings.pitch,\n      speed: mapSettings.speed,\n      curve: mapSettings.curve,\n      easing: (t) => t\n    })\n\n    this.setState({poiIndex: newIndex})\n  }\n\n  addStatic () {\n    const { staticOverlay, scaleFactor, FPS, scanSpeed, SAMPLE_COUNT } = staticSettings\n    let { scanSize, scanOffsetY } = staticSettings\n\n    const canvas = document.querySelector(`#${staticOverlay}`)\n    const context = canvas.getContext('2d')\n\n    let samples = []\n    let sampleIndex = 0\n\n    window.onresize = function () {\n      canvas.width = canvas.offsetWidth / scaleFactor\n      canvas.height = canvas.width / (canvas.offsetWidth / canvas.offsetHeight)\n      scanSize = (canvas.offsetHeight / scaleFactor) / 3\n\n      samples = []\n      for (let i = 0; i < SAMPLE_COUNT; i++) {\n        samples.push(generateRandomSample(context, canvas.width, canvas.height))\n      }\n    }\n\n    const interpolate = (x, x0, y0, x1, y1) => {\n      return y0 + (y1 - y0) * ((x - x0) / (x1 - x0))\n    }\n\n    const generateRandomSample = (context, w, h) => {\n      const intensity = []\n      const factor = h / 50\n\n      const intensityCurve = []\n      for (let i = 0; i < Math.floor(h / factor) + factor; i++) {\n        intensityCurve.push(Math.floor(Math.random() * 15))\n      }\n\n      for (let i = 0; i < h; i++) {\n        const value = interpolate((i / factor), Math.floor(i / factor), intensityCurve[Math.floor(i / factor)], Math.floor(i / factor) + 1, intensityCurve[Math.floor(i / factor) + 1])\n        intensity.push(value)\n      }\n\n      const imageData = context.createImageData(w, h)\n      for (let i = 0; i < (w * h); i++) {\n        const k = i * 4\n        let color = Math.floor(36 * Math.random())\n\n        color += intensity[Math.floor(i / w)]\n        imageData.data[k] = imageData.data[k + 1] = imageData.data[k + 2] = color\n        imageData.data[k + 3] = 255\n      }\n      return imageData\n    }\n\n    const render = () => {\n      context.putImageData(samples[Math.floor(sampleIndex)], 0, 0)\n\n      sampleIndex += 30 / FPS\n      if (sampleIndex >= samples.length) sampleIndex = 0\n\n      const grd = context.createLinearGradient(-1, scanOffsetY, 0, scanSize + scanOffsetY)\n\n      grd.addColorStop(0, 'rgba(255,255,255,0)')\n      grd.addColorStop(0.1, 'rgba(255,255,255,0)')\n      grd.addColorStop(0.2, 'rgba(255,255,255,0.2)')\n      grd.addColorStop(0.45, 'rgba(255,255,255,0.1)')\n      grd.addColorStop(0.5, 'rgba(255,255,255,0.25)')\n      grd.addColorStop(0.55, 'rgba(255,255,255,0.2)')\n      grd.addColorStop(0.6, 'rgba(255,255,255,0.15)')\n      grd.addColorStop(1, 'rgba(255,255,255,0)')\n\n      context.fillStyle = grd\n      context.fillRect(0, scanOffsetY, canvas.width, scanSize + scanOffsetY)\n      context.globalCompositeOperation = 'lighten'\n\n      scanOffsetY += (canvas.height / (FPS * scanSpeed))\n      if (scanOffsetY > canvas.height) scanOffsetY = -(scanSize / 2)\n\n      window.setTimeout(function () {\n        window.requestAnimationFrame(render)\n      }, 1000 / FPS)\n    }\n    window.onresize()\n    window.requestAnimationFrame(render)\n  }\n\n  componentDidMount () {\n    this.initializeMap()\n    this.addStatic()\n  }\n\n  render () {\n    return (\n      <div className='home-background'>\n        <canvas id='static-overlay'></canvas>\n        <div id='map'></div>\n      </div>\n    )\n  }\n}\n\nHomeBackground.propTypes = {\n  mapboxgl: PropTypes.object\n}\n\nexport default HomeBackground\n","'use strict'\nimport defaultsDeep from 'lodash.defaultsdeep'\n/*\n * App configuration.\n *\n * Uses settings in config/production.js, with any properties set by\n * config/staging.js or config/local.js overriding them depending upon the\n * environment.\n *\n * This file should not be modified.  Instead, modify one of:\n *\n *  - config/production.js\n *      Production settings (base).\n *  - config/staging.js\n *      Overrides to production if ENV is staging.\n *  - config/local.js\n *      Overrides if local.js exists.\n *      This last file is gitignored, so you can safely change it without\n *      polluting the repo.\n */\n\nconst configurations = {\n  local: require('./config/local.js'),\n  staging: require('./config/staging.js'),\n  production: require('./config/production.js')\n}\nlet config = configurations.local || {}\n\nif (process.env.DS_ENV === 'staging') {\n  defaultsDeep(config, configurations.staging)\n}\ndefaultsDeep(config, configurations.production)\n\nmodule.exports = config\n","'use strict'\n\nexport default {\n  environment: 'development'\n}\n","'use strict'\n\nexport default {\n  accessToken: 'pk.eyJ1IjoibmJ1bWJhcmciLCJhIjoiWG1NN1BlYyJ9.nbifRhdBcN1K-mdtwwi0eQ',\n  environment: 'production',\n  consoleMessage: 'production'\n}\n","'use strict'\n\nexport default {\n  accessToken: 'pk.eyJ1IjoibmJ1bWJhcmciLCJhIjoiWG1NN1BlYyJ9.nbifRhdBcN1K-mdtwwi0eQ',\n  environment: 'staging',\n  consoleMessage: 'staging'\n}\n","'use strict'\n\nexport const mapSettings = {\n  container: 'map',\n  style: 'mapbox://styles/mapbox/satellite-v9',\n  zoom: 19,\n  pitch: 60,\n  speed: 0.15,\n  curve: 0.75\n}\n\nexport const staticSettings = {\n  staticOverlay: 'static-overlay',\n  scaleFactor: 3,\n  scanOffsetY: 50,\n  scanSize: 0,\n  FPS: 23,\n  scanSpeed: 6,\n  SAMPLE_COUNT: 7\n}\n\nexport const mapPOIs = [\n  {name: 'Dupont Circle', coords: [-77.04227, 38.910337]},\n  {name: 'National Geographic Museum', coords: [-77.037978, 38.905194]},\n  {name: 'Foggy Bottom', coords: [-77.053342, 38.900218]},\n  {name: 'Georgetown', coords: [-77.066045, 38.91027]},\n  {name: 'United States Naval Observatory', coords: [-77.066174, 38.922324]},\n  {name: 'Smithsonian National Zoological Park', coords: [-77.049394, 38.931038]},\n  {name: 'Columbia Heights', coords: [-77.03021, 38.928968]},\n  {name: 'Brookland', coords: [-76.982574, 38.929102]},\n  {name: 'Navy Yard', coords: [-76.997852, 38.877136]},\n  {name: 'American University Park', coords: [-77.089691, 38.942588]},\n  {name: 'Chevy Chase', coords: [-77.066689, 38.964948]},\n  {name: 'Rock Creek Golf Course', coords: [-77.038794, 38.965682]},\n  {name: 'Sherman Circle Northwest', coords: [-77.021542, 38.947328]},\n  {name: 'Tacoma', coords: [-77.019997, 38.972756]},\n  {name: 'National Mall', coords: [-77.023001, 38.88963]},\n  {name: 'Lincoln Memorial', coords: [-77.050209, 38.889296]},\n  {name: 'Hill East', coords: [-76.979871, 38.884853]}\n]\n\nexport const navLinks = [\n  {name: 'LinkedIn', iconClass: 'collecticon-linkedin', url: 'https://www.linkedin.com/in/nbumbarger/'},\n  {name: 'Github', iconClass: 'collecticon-github', url: 'https://github.com/nbumbarger/'},\n  {name: 'Twitter', iconClass: 'collecticon-twitter', url: 'https://twitter.com/Sir_Mapsalot'},\n  {name: 'Email', iconClass: 'collecticon-envelope', url: 'mailto:nick@nickbumbarger.com'}\n]\n","'use strict'\n\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { createLogger } from 'redux-logger'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\n\nimport config from './config'\nimport reducer from './reducers'\n\nconst logger = createLogger({\n  level: 'info',\n  collapsed: true,\n  predicate: (getState, action) => {\n    return (config.environment !== 'production')\n  }\n})\n\nconst store = createStore(reducer, applyMiddleware(\n  logger\n))\n\n// Components\nimport Home from './views/home'\nimport UhOh from './views/uhoh'\n\nrender((\n  <Provider store={store}>\n    <HashRouter>\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route component={UhOh} />\n      </Switch>\n    </HashRouter>\n  </Provider>\n), document.querySelector('#app-container'))\n","'use strict'\n\nimport {\n\n} from '../actions'\n\nexport const initialState = {\n\n}\n\nexport default (state = initialState, action) => {\n  state = Object.assign({}, state)\n  switch (action.type) {\n\n  }\n  return state\n}\n","'use strict'\n\nimport { combineReducers } from 'redux'\n\nimport home from './home'\n\nexport const reducers = {\n  home\n}\nexport default combineReducers(Object.assign({}, reducers, {\n}))\n","'use strict'\n\nimport turfBearing from '@turf/bearing'\n\n// Calculate bearing from one point to another\nexport const getBearing = (coord1, coord2) => {\n  const [ point1, point2 ] = [coord1, coord2].map((coord) => {\n    return {\n      'type': 'Feature',\n      'geometry': {\n        'type': 'Point',\n        'coordinates': [coord[0], coord[1]]\n      }\n    }\n  })\n  return turfBearing(point1, point2)\n}\n","'use strict'\n\nimport React, { Component } from 'react'\nimport mapboxgl from 'mapbox-gl'\n\nimport HomeBackground from '../components/home-background'\nimport Header from '../components/header/header'\n\nexport class Home extends Component {\n  render () {\n    return (\n      <div className='page__home'>\n        <Header />\n        <HomeBackground mapboxgl={mapboxgl} />\n      </div>\n    )\n  }\n}\n\nexport default Home\n","import React, { Component } from 'react'\n\nexport class UhOh extends Component {\n  render () {\n    return (\n      <div className='page__uhoh'>\n        <h1>404</h1>\n        <h2>Something is missing...</h2>\n      </div>\n    )\n  }\n}\n\nexport default UhOh\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}